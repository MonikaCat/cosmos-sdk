// Code generated by capnpc-go. DO NOT EDIT.

package types

import (
	capnp "zombiezen.com/go/capnproto2"
	text "zombiezen.com/go/capnproto2/encoding/text"
	schemas "zombiezen.com/go/capnproto2/schemas"
)

type CoinE struct{ capnp.Struct }

// CoinE_TypeID is the unique identifier for the type CoinE.
const CoinE_TypeID = 0xb20ab9a834861aed

func NewCoinE(s *capnp.Segment) (CoinE, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return CoinE{st}, err
}

func NewRootCoinE(s *capnp.Segment) (CoinE, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return CoinE{st}, err
}

func ReadRootCoinE(msg *capnp.Message) (CoinE, error) {
	root, err := msg.RootPtr()
	return CoinE{root.Struct()}, err
}

func (s CoinE) String() string {
	str, _ := text.Marshal(0xb20ab9a834861aed, s.Struct)
	return str
}

func (s CoinE) Denom() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s CoinE) HasDenom() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s CoinE) DenomBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s CoinE) SetDenom(v string) error {
	return s.Struct.SetText(0, v)
}

func (s CoinE) Amount() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s CoinE) HasAmount() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s CoinE) AmountBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s CoinE) SetAmount(v string) error {
	return s.Struct.SetText(1, v)
}

// CoinE_List is a list of CoinE.
type CoinE_List struct{ capnp.List }

// NewCoinE creates a new list of CoinE.
func NewCoinE_List(s *capnp.Segment, sz int32) (CoinE_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return CoinE_List{l}, err
}

func (s CoinE_List) At(i int) CoinE { return CoinE{s.List.Struct(i)} }

func (s CoinE_List) Set(i int, v CoinE) error { return s.List.SetStruct(i, v.Struct) }

func (s CoinE_List) String() string {
	str, _ := text.MarshalList(0xb20ab9a834861aed, s.List)
	return str
}

// CoinE_Promise is a wrapper for a CoinE promised by a client call.
type CoinE_Promise struct{ *capnp.Pipeline }

func (p CoinE_Promise) Struct() (CoinE, error) {
	s, err := p.Pipeline.Struct()
	return CoinE{s}, err
}

const schema_b02b1ca217480de7 = "x\xda\x120r`\x12d\x8dg`\x08dae\xfb" +
	"\xffV\xaa\xcdd\xc5N\xaeM\x0c\x82B\x8c\xff\x9f\xf3" +
	"z\x88/\x92\xd1\xde\xc0\xc0\xca\xc4\xce\xc0 (zH" +
	"P\x16DK\x9630\xfe/\xa9,H-\xd6O\xce" +
	"gJIM\xd6KN,\xc8+\xb0r\xce\xcf\xccs" +
	"e\x08`d\x0c\xe4`fa``ad`\x10\xd4" +
	"4b`\x08Taf\x0c4`b\x14dd\x14a" +
	"\x04\x09\xeaZ10\x04j03\x06\x9a01\xca\xa7" +
	"\xa4\xe6\xe5\xe72\xf2001\xf200\xda'\xe6\xe6" +
	"\x97\xe6\x95\xc0\xb8\x80\x00\x00\x00\xff\xff\xcd\xf4\x1e\xc3"

func init() {
	schemas.Register(schema_b02b1ca217480de7,
		0xb20ab9a834861aed)
}
